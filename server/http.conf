
server {
    server_name         discosat.cs.uni-kl.de;

    client_max_body_size 4G;

    root /home/disco/discosat_server/app/static;
    index index.html;

    # protect cross-site-scripting
    add_header Content-Security-Policy "script-src 'self'"; 

    location / {
        # path for static files  
        try_files $uri $uri/ =404;
    }

    # proxy all requests to /data, /docs or /jobs to FastAPI 
    location ~ ^/(data/|fixedjobs/|sensors/|login/|usermanagement/) {
        proxy_set_header Access-Control-Origin *;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://127.0.0.1:8000;
    }

    # proxy dash requests to FastAPI and change Content-Security-Policy for scripts to hash of the dash generated
    # inline script, so we dont have to use unsave-inline
    location /dash/ {
        proxy_set_header Access-Control-Origin *;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://127.0.0.1:8000;

        # https://github.com/plotly/dash/issues/630 &   https://github.com/plotly/dash-core-components/issues/752
        add_header Content-Security-Policy "
            script-src 'self' 'sha256-jZlsGVOhUAIcH+4PVs7QuGZkthRMgvT2n0ilH6/zTM0='
            'sha256-nSprf64bZrwVRCJAphL0dHZeysya3zSu6qO7CSlTses=';
            ";
    }


    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/discosat.cs.uni-kl.de/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/discosat.cs.uni-kl.de/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream uvicorn {
    server unix:/tmp/uvicorn.sock;
}


server {
    if ($host = discosat.cs.uni-kl.de) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen              80;
    server_name         discosat.cs.uni-kl.de;
    return 404; # managed by Certbot


}
